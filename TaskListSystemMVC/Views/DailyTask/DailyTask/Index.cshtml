@using TaskListSystemMVC
@using TaskListSystemMVC.Database
@using TaskListSystemMVC.Models
@inject IMasterHelper masterHelper

@model TaskListSystemMVC.Database.PaginationList<TaskListSystemMVC.Database.Model.TDailyTask>

@{
	ViewData["Title"] = "Daily Task";

	var pageIndex = Convert.ToInt32(ViewData["PageIndex"]);
	var pageCount = Convert.ToInt32(ViewData["PageCount"]);
	var totalItem = Convert.ToInt32(ViewData["TotalItem"]);
}

<table>
	<tr>
		<td>
			<h4>Daily Task List</h4>			
		</td>
		<td style="padding-left:10px">
			<span>(Total: @totalItem items)</span>
		</td>
		<td style="padding-left:25px">
			<a href="@Url.Action("Create", "TDailyTask")" class="btn btn-success">ADD</a>
		</td>		
	</tr>
</table>

<table class="table">
	<thead>	
		<tr>
			<th></th>
			<th><a asp-action="Index" asp-route-sortOrder="desc">Report ID</a></th>
			<th>Reported On</th>
			<th>Scheduled On</th>
			<th>Title</th>
			<th>Status</th>
			<th>PIC</th>
			<th>Type</th>
			<th>Completed On</th>
			@* <th>Created By</th>
			<th>Created On</th>
			<th>Updated By</th>
			<th>Updated On</th> *@
		</tr>		
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			var rowclass = item.StatusID switch
			{
				FixedStatus.WIP_UID => "table-secondary",
				FixedStatus.HOLD_UID => "table-danger",
				FixedStatus.COMPLETED_UID => "table-success",
				_ => ""
			};

			<tr class="@rowclass">
				<td>
					<a href="@Url.Action("Edit", "TDailyTask", new { id = item.UID })" class="btn btn-outline-danger">
						<i class="bi bi-pencil text-warning"></i>
					</a>
					<a href="@Url.Action("Delete", "TDailyTask", new { id = item.UID })" class="btn btn-outline-warning">
						<i class="bi bi-trash text-danger"></i>
					</a>
				</td>
				<td>@item.ReportByID</td>
				<td>@item.ReportedOn</td>
				<td>@item.ScheduledOn</td>
				<td>@item.Title</td>
				<td>@(masterHelper.GetStatusByID(item.StatusID.Value)?.Result?.Name)</td>
				<td>@(masterHelper.GetAccountInfoByID(item.PICID.Value)?.Result?.Name)</td>
				<td>@(masterHelper.GetTypeByID(item.TypeID.Value)?.Result?.Name)</td>				
				<td>@item.CompletedOn</td>
				@* <td>@item.CreatedBy</td>
				<td>@item.CreatedOn</td>
				<td>@item.UpdatedBy</td>
				<td>@item.UpdatedOn</td> *@
			</tr>
		}
	</tbody>
</table>

@await Html.PartialAsync("Pagination", (pageIndex, pageCount, "TDailyTask", "Index"))