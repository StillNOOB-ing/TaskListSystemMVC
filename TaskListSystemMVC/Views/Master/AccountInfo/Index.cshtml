@inject IMasterHelper masterHelper
@inject IAccountHelper accountHelper

@model PaginationList<MAccountInfo>

@{
    ViewData["Title"] = "Account List";
}

<table style="width:100%">
    <tr class="d-flex justify-content-between align-items-center">
        <td class="d-flex align-items-center">
            <h4>Account List</h4>
            <span style="margin-left:10px">(Total: @Model.TotalItem items)</span>
            @if (accountHelper.GetUserLevelID() == FixedUserLevel.SUPERADMIN_UID)
            {
                <a href="@Url.Action("Create", "MAccountInfo")" class="btn btn-success" style="margin-left:25px">ADD</a>
            }            
        </td>
        <td class="ms-auto">
            @await Html.PartialAsync("SearchBar", @ViewData["SearchFilter"])
        </td>
    </tr>
</table>

<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                
            </th>
            <th>
                <a asp-controller="MAccountInfo" asp-action="Index" asp-route-index="@Model.PageIndex" asp-route-sortOrder="@ViewData["SortParamName"]" asp-route-searchFilter="@ViewData["SearchFilter"]">
                    Name
                    @if (ViewData["SortParamName"]?.ToString() == "asc")
                    {
                        <i class="bi bi-arrow-up"></i>
                    }
                    else if (ViewData["SortParamName"]?.ToString() == "desc")
                    {
                        <i class="bi bi-arrow-down"></i>
                    }
                </a>
            </th>
            <th>Active</th>
            <th>Level</th>
            <th>Last Login On</th>
            <th>Last Updated On</th>
            <th>Last Updated By</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (accountHelper.GetUserLevelID() == FixedUserLevel.SUPERADMIN_UID || accountHelper.GetName() == item.Name)
                    {
                        <a href="@Url.Action("Edit", "MAccountInfo", new { id = item.UID })" class="btn btn-outline-danger">
                            <i class="bi bi-pencil-square text-warning"></i>
                        </a>                      
                    }
                    @if (accountHelper.GetUserLevelID() == FixedUserLevel.SUPERADMIN_UID && item.UID != 1)
                    {
                        <a href="@Url.Action("Delete", "MAccountInfo", new { id = item.UID })" class="btn btn-outline-danger">
                            <i class="bi bi-trash text-danger"></i>
                        </a>
                    }
                    @if (accountHelper.GetUserLevelID() == FixedUserLevel.SUPERADMIN_UID || accountHelper.GetName() == item.Name)
                    {
                        <a href="@Url.Action("ChangePassword", "MAccountInfo", new { id = item.UID })" , class="btn btn-outline-secondary">
                            <i class="bi bi-key text-secondary"></i>
                        </a>
                    }                    
                </td>
                <td>@item.UID</td>
                <td>@item.Name</td>
                <td>@item.Active</td>
                <td>@item.LevelRightName</td>
                <td>@item.LastLoginOn</td>
                <td>@(item.UpdatedOn == null ? item.CreatedOn : item.UpdatedOn)</td>
                <td>@(item.UpdatedBy == null ? item.CreatedBy : item.UpdatedBy)</td>
            </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("PageBar", ("MAccountInfo", "Index", Model.PageIndex, Model.TotalPage))